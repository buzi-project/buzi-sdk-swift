//
// Message.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Message: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case pending = "PENDING"
        case rejected = "REJECTED"
    }
    public enum Inbox: String, Codable, CaseIterable {
        case incoming = "incoming"
        case outgoing = "outgoing"
    }
    public var id: UUID?
    public var createdAt: Date?
    public var status: Status?
    public var reason: String?
    public var cost: Cost?
    public var inbox: Inbox?

    public init(id: UUID? = nil, createdAt: Date? = nil, status: Status? = nil, reason: String? = nil, cost: Cost? = nil, inbox: Inbox? = nil) {
        self.id = id
        self.createdAt = createdAt
        self.status = status
        self.reason = reason
        self.cost = cost
        self.inbox = inbox
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case createdAt = "created_at"
        case status
        case reason
        case cost
        case inbox
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(reason, forKey: .reason)
        try container.encodeIfPresent(cost, forKey: .cost)
        try container.encodeIfPresent(inbox, forKey: .inbox)
    }
}

